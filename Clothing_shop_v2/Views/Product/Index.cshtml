@model Clothing_shop_v2.VModels.ProductListViewModel

@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "_LayoutAdmin";
}

<!-- Hiển thị thông báo thành công hoặc lỗi -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card-body">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <form asp-action="Index" method="get" class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control bg-light border-0 small" placeholder="Tìm kiếm sản phẩm..."
                       aria-label="Search" aria-describedby="basic-addon2" value="@Model.SearchString">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-search fa-sm"></i>
                    </button>
                </div>
            </div>
        </form>
        <a asp-action="Create" class="btn btn-primary ms-2"><i class="fas fa-plus"></i> Tạo mới</a>
    </div>

    <!-- Bảng sản phẩm -->
    <div class="table-container">
        <table class="table table-bordered table-hover shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Tên sản phẩm</th>
                    <th>Ảnh</th>
                    @* <th>Mô tả</th> *@
                    <th>Danh mục</th>
                    <th>Ngày tạo</th>
                    <th>Ngày cập nhật</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Products != null && Model.Products.Any())
                {
                    int index = (Model.PageNumber - 1) * Model.PageSize + 1;
                    foreach (var product in Model.Products)
                    {
                        <tr>
                            <td>@index</td>
                            <td>@product.ProductName</td>
                            <td>
                                @if (!string.IsNullOrEmpty(product.PrimaryImageUrl))
                                {
                                    <img src="@product.PrimaryImageUrl" alt="@product.ProductName" class="product-image" loading="lazy" />
                                }
                                else
                                {
                                    <span class="text-muted">Không có ảnh</span>
                                }
                            </td>
                            @* <td>
                                <div class="description-content" data-full="@Html.Raw(product.Description)">
                                    @if (!string.IsNullOrEmpty(product.Description))
                                    {
                                        @Html.Raw(product.Description.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)
                                        @if (product.Description.Length > 100)
                                        {
                                            <button type="button" class="btn btn-link btn-sm view-more">Xem thêm</button>
                                        }
                                    }
                                </div>
                            </td> *@
                            <td>@product.Category.CategoryName</td>
                            <td>@product.CreatedDate.ToString("dd-MM-yyyy HH:mm")</td>
                            <td>@(product.UpdatedDate.HasValue ? product.UpdatedDate.Value.ToString("dd-MM-yyyy HH:mm") : "-")</td>
                            <td class="action-buttons">
                                <a asp-action="Details" asp-controller="Product" asp-route-id="@product.Id" class="action-icon details-icon" title="Chi tiết">
                                    <i class="fa-solid fa-circle-info"></i>
                                </a>
                                <a asp-action="Update" asp-route-id="@product.Id" class="action-icon edit-icon" title="Chỉnh sửa">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="#" class="action-icon delete-icon" data-bs-toggle="modal" data-bs-target="#deleteModal-@product.Id" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </a>
                                <!-- Modal xác nhận xóa -->
                                <div class="modal fade" id="deleteModal-@product.Id" tabindex="-1">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Xác nhận xóa</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                            </div>
                                            <div class="modal-body">
                                                Bạn có chắc chắn muốn xóa sản phẩm "@product.ProductName"?
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                                <form asp-action="Delete" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@product.Id" />
                                                    <button type="submit" class="btn btn-danger">Xóa</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="text-center text-muted">Không có sản phẩm nào.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Phân trang -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString">Trước</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString">@i</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString">Sau</a>
            </li>
        </ul>
    </nav>
}

<style>
    .table-container {
        overflow-x: auto;
        border-radius: 8px;
        background-color: #fff;
    }

    .table {
        margin-bottom: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table th, .table td {
            vertical-align: middle;
            padding: 12px;
            border-color: #dee2e6;
            text-align: center;
        }

        .table th {
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .table tbody tr {
            transition: background-color 0.2s ease;
        }

            .table tbody tr:hover {
                background-color: #f8f9fa;
            }

    .product-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
        border: 1px solid #dee2e6;
    }

    .description-content {
        max-height: 80px;
        overflow: hidden;
        position: relative;
    }

        .description-content img {
            max-width: 100px;
            max-height: 60px;
            object-fit: cover;
            border-radius: 4px;
        }

    .view-more {
        font-size: 0.85rem;
        padding: 0;
        color: #007bff;
    }

        .view-more:hover {
            text-decoration: underline;
        }

    .btn-sm {
        padding: 6px 12px;
        border-radius: 4px;
    }

    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
    }

        .btn-warning:hover {
            background-color: #e0a800;
            border-color: #e0a800;
        }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }

        .btn-danger:hover {
            background-color: #c82333;
            border-color: #c82333;
        }

    .pagination .page-link {
        border-radius: 4px;
        margin: 0 2px;
        color: #007bff;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .pagination .page-item.disabled .page-link {
        color: #6c757d;
    }

    .action-buttons {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 10px;
        flex-wrap: nowrap;
        height: 100%;
        min-height: 40px;
    }

    .action-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        text-decoration: none;
        transition: background-color 0.2s ease, transform 0.1s ease;
        line-height: 32px;
    }

        .action-icon i {
            font-size: 1.1rem;
            line-height: 1;
        }

    .details-icon {
        color: #17a2b8;
    }

        .details-icon:hover {
            background-color: rgba(23, 162, 184, 0.1);
            color: #138496;
            transform: scale(1.1);
        }

    .edit-icon {
        color: #ffc107;
    }

        .edit-icon:hover {
            background-color: rgba(255, 193, 7, 0.1);
            color: #e0a800;
            transform: scale(1.1);
        }

    .delete-icon {
        color: #dc3545;
    }

        .delete-icon:hover {
            background-color: rgba(220, 53, 69, 0.1);
            color: #c82333;
            transform: scale(1.1);
        }

    @@media screen and (max-width: 768px) {
        .table th, .table td {
            padding: 8px;
            font-size: 0.9rem;
        }

        .product-image {
            width: 60px;
            height: 60px;
        }

        .description-content {
            max-height: 60px;
        }

            .description-content img {
                max-width: 80px;
                max-height: 40px;
            }

        .btn-sm {
            padding: 4px 8px;
            font-size: 0.85rem;
        }

        .action-buttons {
            gap: 8px;
            min-height: 36px;
        }

        .action-icon {
            width: 28px;
            height: 28px;
            line-height: 28px;
        }

            .action-icon i {
                font-size: 1rem;
            }
    }

    @@media screen and (max-width: 576px) {
        .product-image {
            width: 50px;
            height: 50px;
        }

        .action-buttons {
            gap: 6px;
            min-height: 32px;
        }

        .action-icon {
            width: 24px;
            height: 24px;
            line-height: 24px;
        }

            .action-icon i {
                font-size: 0.9rem;
            }
    }
</style>

@section Scripts {
    <script>
        // Xử lý nút "Xem thêm" cho cột Mô tả
        document.querySelectorAll('.view-more').forEach(button => {
            button.addEventListener('click', function () {
                const contentDiv = this.parentElement;
                const fullContent = contentDiv.getAttribute('data-full');
                contentDiv.innerHTML = fullContent;
            });
        });
    </script>
}